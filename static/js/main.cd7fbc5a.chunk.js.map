{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReverse","visibleGoods","goods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAmCH,oBAAS,GAA5C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA9BD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITV,GACFE,EAAaS,UAGRT,EAOcU,CACnBlB,EACA,CAAEI,WAAUE,eAQd,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAYN,EAASc,WACpCM,UAAWG,IAAG,iBACZ,CAAE,WAAYlB,IAAaL,EAASc,WAJxC,iCASA,wBACEO,KAAK,SACLC,QAAS,kBAAMhB,EAAYN,EAASgB,SACpCI,UAAWG,IAAG,oBACZ,CAAE,WAAYlB,IAAaL,EAASgB,SAJxC,4BASA,wBACEK,KAAK,SACLC,QAAS,kBAAMd,GAAcD,IAC7Ba,UAAWG,IAAG,oBACZ,CAAE,YAAahB,IAJnB,sBASEA,GAAcF,IAAaL,EAASI,OACpC,wBACEkB,QArCI,WACZhB,EAAYN,EAASI,MACrBI,GAAa,IAoCLa,KAAK,SACLD,UAAU,4BAHZ,sBAUJ,6BACE,6BACGX,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC9GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd7fbc5a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a: string, b: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReverse] = useState(false);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.ALPHABET)}\n          className={cn('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.LENGTH)}\n          className={cn('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReverse(!isReversed)}\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}